Level 2 DB encryption
1. Install mongoose encryption (npm i moongoose-encryption) and
  require it in app.js
2. Change User schema to new moongoose.Schema
3. Define a secret and use it to encrypt the DB
4. add the schema.plugin(from moongoose-- extra bit of code to give schema more power)
5. add encryptedfields to only limit it to encrypting the password(other entries can be added into the the encryptedfields array
  userSchema.plugin(encrypt, {secret: secret, encryptedFields:["password"]});

Note : When you call save on a document(mongoose document), the document or db record is encryptedFields
passwords are decrypted when you call the moongoose.find

//

New Code added
const secret = "longstringasasecret";
userSchema.plugin(encrypt, {secret: secret, encryptedFields:["password"]});
//User Model
const User = new mongoose.model("User", userSchema);

//Full code
//jshint esversion:6
const express = require("express");
const ejs = require("ejs");
const bodyParser = require("body-parser");
const mongoose = require("mongoose");
const encrypt = require("mongoose-encryption");
const app = express();



app.use(express.static("public"));
app.set('view engine', 'ejs');
app.use(bodyParser.urlencoded({
  extended:true
}));

//Db connection
mongoose.connect('mongodb://localhost:27017/userDB', {useNewUrlParser: true, useUnifiedTopology: true});


//DB schema for userDB
const userSchema = new mongoose.Schema({
  email: String,
  password:String
});

const secret = "longstringasasecret";
userSchema.plugin(encrypt, {secret: secret, encryptedFields:["password"]});
//User Model
const User = new mongoose.model("User", userSchema);

app.get("/", function(req, res){
  res.render("home");
});

app.get("/login", function(req, res){
  res.render("login");
});

app.get("/register", function(req, res){
  res.render("register");
});

//Registration page
app.post("/register", function(req,res){
  const newUser = new User({
    email:req.body.username,
    password:req.body.password
  });
  newUser.save(function(err){
    if (!err){
      res.render("secrets");
    }else{
      console.log(err);
    }
  });
});

app.post("/login", function(req, res){
  const username = req.body.username;
  const password = req.body.password;

    User.findOne({email:username},function(err, foundUser){
      if(err){
        console.log(err);
      }else{
        if(foundUser){
          if(foundUser.password === password){
          res.render("secrets");
      }
    }
  }
});
});

app.listen(3000, function(req, res){
  console.log("Successfully conneted to port 3000");
});
